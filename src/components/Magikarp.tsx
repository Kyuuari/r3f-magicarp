/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 -t public/Magikarp.gltf
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import {
  Color,
  DebugLayerMaterial,
  Depth,
  Fresnel,
  LayerMaterial,
} from "lamina";

type GLTFResult = GLTF & {
  nodes: {
    Left: THREE.Mesh;
    Right: THREE.Mesh;
    Body: THREE.Mesh;
    Tounge: THREE.Mesh;
    Fins: THREE.Mesh;
    Lips: THREE.Mesh;
    Crown: THREE.Mesh;
    Belly: THREE.Mesh;
    Eyes: THREE.Mesh;
  };
  materials: {
    Material_3: THREE.MeshStandardMaterial;
    Material_0: THREE.MeshStandardMaterial;
    Material_2: THREE.MeshStandardMaterial;
    Material_4: THREE.MeshStandardMaterial;
    Material_5: THREE.MeshStandardMaterial;
    Material_6: THREE.MeshStandardMaterial;
    Material_7: THREE.MeshStandardMaterial;
    Material_8: THREE.MeshStandardMaterial;
  };
};

export function Magikarp(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/Magikarp.gltf") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Body.geometry}>
        <LayerMaterial lighting={"toon"}>
          <Color
            color={"#fe0000"}
            colorA={"#810000"}
            colorB={"#ffd0d0"}
            near={0}
            far={2}
            origin={[1, 1, 1]}
          />
          <Fresnel
            color={"#fefefe"}
            alpha={0.19999999999999996}
            intensity={0.32999999999999924}
          />
        </LayerMaterial>

        {/* <DebugLayerMaterial color="#ffffff">
          <Color
            colorA="#810000" //
            colorB="#ffd0d0"
            mode="normal"
            near={0}
            far={2}
            origin={[1, 1, 1]}
          />
          <Fresnel />
        </DebugLayerMaterial> */}
      </mesh>
      <mesh
        geometry={nodes.Tounge.geometry}
        material={materials.Material_2}
        position={[0, -0.27, 0.01]}
        scale={0.16}
      />
      <mesh
        geometry={nodes.Fins.geometry}
        material={materials.Material_4}
        position={[0, -0.01, 0.03]}
        rotation={[0.33, 0, 0]}
        scale={[1.01, 1.33, 1.01]}
      />
      <mesh
        geometry={nodes.Lips.geometry}
        material={materials.Material_5}
        position={[0, 0, -0.04]}
      />
      <mesh
        geometry={nodes.Crown.geometry}
        material={materials.Material_6}
        position={[0, 0.22, -0.55]}
        rotation={[-0.14, 0, 0]}
      />
      <mesh
        geometry={nodes.Belly.geometry}
        material={materials.Material_7}
        position={[0, -0.26, -0.46]}
        rotation={[-2.7, -0.02, 0]}
        scale={[0.98, 1, 0.98]}
      />
      <mesh
        geometry={nodes.Eyes.geometry}
        position={[0, 0.04, 0]}
        rotation={[0.02, 0, 0]}
      >
        <LayerMaterial color={"16711422"} lighting={"toon"}>
          <Color color={"#000000"} alpha={0.98} />
        </LayerMaterial>
      </mesh>
      <mesh
        geometry={nodes.Left.geometry}
        material={materials.Material_3}
        position={[-0.5, -0.33, 0.02]}
        rotation={[0, 0, 2.23]}
      />
      <mesh
        geometry={nodes.Right.geometry}
        material={materials.Material_3}
        position={[0.5, -0.33, 0.02]}
        rotation={[-Math.PI, 0, 2.23]}
        scale={-1}
      />
    </group>
  );
}

useGLTF.preload("/Magikarp.gltf");
